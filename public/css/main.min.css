*{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0;margin:0;list-style:none;text-decoration:none;font-size:14px}body{font:14px/1.5 Arial;background:#ffa}header{color:#fff;position:fixed;top:0;left:0;right:0;background:#000;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:7.3vh 45vw 7.3vh 7vw;height:20vh}.logo{width:42px;height:50px}.logo img{-o-object-fit:fill;object-fit:fill;width:100%;height:100%}header nav ul{position:relative}header nav ul li{float:left}header nav ul li a{background:#000;padding:15px;color:#fff;font-size:16px;display:block}header nav ul li a:hover{color:#74ff73}nav ul li div,nav ul li ul{background:#000;position:absolute;left:0;display:none}nav ul li ul{width:80%;z-index:30;padding-top:5.2vh;padding-bottom:5.2vh}nav ul li div{width:200vw;height:27vh;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);z-index:10}.news,.toend,header,nav ul li:hover>ul{display:-webkit-box;display:-ms-flexbox;display:flex}nav ul li:hover>ul{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;flex-wrap:wrap}nav ul li:hover>div{display:initial}nav ul li ul li{width:50%}.news,.toend{-webkit-box-pack:end;-ms-flex-pack:end;justify-content:end}nav ul li ul li a{padding-left:10px;padding-top:3px}.news{list-style:none;padding:0;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.title{text-transform:uppercase}@media (max-width:1000px){header{padding:7.3vh 10vw 7.3vh 7vw}}@media (max-width:700px){body{color:#fff;background-color:#000}.news{display:block}.title{text-align:center}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */